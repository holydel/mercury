#include "../mercury_api.h"

namespace mercury {
namespace ll {
namespace graphics {
enum class Format {
  // Common formats
  RGBA8_UNORM,
  RGBA8_UNORM_SRGB,
  BGRA8_UNORM,
  RGBA16_FLOAT,
  RGBA32_FLOAT,
  R8_UNORM,
  RG8_UNORM,
  R16_FLOAT,
  RG16_FLOAT,
  R32_FLOAT,
  RG32_FLOAT,
  DEPTH24_UNORM_STENCIL8,
  DEPTH32_FLOAT,
  DEPTH16_UNORM,
  BC1_UNORM,
  BC1_UNORM_SRGB,
  BC2_UNORM,
  BC2_UNORM_SRGB,
  BC3_UNORM,
  BC3_UNORM_SRGB,
  BC4_UNORM,
  BC4_SNORM,
  BC5_UNORM,
  BC5_SNORM,
  BC6H_UFLOAT,
  BC6H_SFLOAT,
  BC7_UNORM,
  BC7_UNORM_SRGB,
  ASTC_4X4_UNORM,
  ASTC_4X4_UNORM_SRGB,
  ETC2_RGB_UNORM,
  ETC2_RGB_UNORM_SRGB,
  R8_SNORM,
  R8_UINT,
  R8_SINT,
  RG8_SNORM,
  RG8_UINT,
  RG8_SINT,
  RGBA8_SNORM,
  RGBA8_UINT,
  RGBA8_SINT,
  R16_UNORM,
  R16_SNORM,
  R16_UINT,
  R16_SINT,
  RG16_UNORM,
  RG16_SNORM,
  RG16_UINT,
  RG16_SINT,
  RGBA16_UNORM,
  RGBA16_SNORM,
  RGBA16_UINT,
  RGBA16_SINT,
  R32_UINT,
  R32_SINT,
  RG32_UINT,
  RG32_SINT,
  RGBA32_UINT,
  RGBA32_SINT,
  R64_FLOAT,
  RG64_FLOAT,
  RGBA64_FLOAT,
  R10G10B10A2_UNORM,
  R10G10B10A2_UINT,
  RG11B10_FLOAT,
  R9G9B9E5_UFLOAT,
  B5G6R5_UNORM,
  B5G5R5A1_UNORM,
  R4G4_UNORM,
  R4G4B4A4_UNORM,
  B4G4R4A4_UNORM,
  R5G5B5A1_UNORM,
  A1R5G5B5_UNORM,
  R10X6G10X6B10X6A10X6_UNORM,
  R12X4G12X4B12X4A12X4_UNORM,
  STENCIL8_UINT,
  DEPTH32_FLOAT_STENCIL8,
  DEPTH16_UNORM_STENCIL8,

  // DirectX-specific formats
  D3D_AYUV,
  D3D_Y410,
  D3D_Y416,
  D3D_NV12,
  D3D_P010,
  D3D_P016,
  D3D_420_OPAQUE,
  D3D_YUY2,
  D3D_Y210,
  D3D_Y216,
  D3D_NV11,
  D3D_AI44,
  D3D_IA44,
  D3D_P8,
  D3D_A8P8,
  D3D_P208,
  D3D_V208,
  D3D_V408,
  D3D_SAMPLER_FEEDBACK_MIN_MIP_OPAQUE,
  D3D_SAMPLER_FEEDBACK_MIP_REGION_USED_OPAQUE,

  // Vulkan-specific formats
  VK_R8_BOOL_ARM,
  VK_R16G16_SFIXED5_NV,
  VK_G8B8G8R8_UNORM,
  VK_G8_B8_R8_3PLANE_420_UNORM,
  VK_G8_B8R8_2PLANE_420_UNORM,
  VK_G8_B8_R8_3PLANE_422_UNORM,
  VK_G8_B8R8_2PLANE_422_UNORM,
  VK_G8_B8_R8_3PLANE_444_UNORM,
  VK_R10X6_UNORM_PACK16,
  VK_R10X6G10X6_UNORM_2PACK16,
  VK_R10X6G10X6B10X6A10X6_UNORM_4PACK16,
  VK_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16,
  VK_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16,
  VK_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16,
  VK_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16,
  VK_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16,
  VK_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16,
  VK_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16,
  VK_R12X4_UNORM_PACK16,
  VK_R12X4G12X4_UNORM_2PACK16,
  VK_R12X4G12X4B12X4A12X4_UNORM_4PACK16,
  VK_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16,
  VK_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16,
  VK_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16,
  VK_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16,
  VK_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16,
  VK_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16,
  VK_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16,
  VK_G16B16G16R16_422_UNORM,
  VK_B16G16R16G16_422_UNORM,
  VK_G16_B16_R16_3PLANE_420_UNORM,
  VK_G16_B16R16_2PLANE_420_UNORM,
  VK_G16_B16_R16_3PLANE_422_UNORM,
  VK_G16_B16R16_2PLANE_422_UNORM,
  VK_G16_B16_R16_3PLANE_444_UNORM,

  // Metal-specific formats
  MTL_A8_UNORM,
  MTL_R8_UNORM_SRGB,
  MTL_RG8_UNORM_SRGB,
  MTL_BGRA8_UNORM_SRGB,
  MTL_RGBA16_UNORM_SRGB,
  MTL_RGBA32_FLOAT_SRGB,
  MTL_DEPTH24_UNORM_STENCIL8,
  MTL_DEPTH32_FLOAT_STENCIL8,
  MTL_BGR10_XR_SRGB,
  // WebGPU-specific formats
  WGPU_BGRA8_UNORM_SRGB,
  WGPU_DEPTH24PLUS,
  WGPU_DEPTH24PLUS_STENCIL8,
};

class Device {
public:
  Device();
  ~Device();

  void Initialize();
  void Shutdown();
};

extern Device *gDevice;
} // namespace graphics
} // namespace ll
} // namespace mercury